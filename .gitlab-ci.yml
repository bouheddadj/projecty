image: maven:3-eclipse-temurin-21-alpine

stages:
  - build
  - deploy

variables:
  API_DEPLOY_PATH: "/opt/tomcat/webapps/users.war"
  DEPLOY_USER: "gitlabci"
  DEPLOY_HOST: "192.168.75.33"
  SSH_OPTIONS: "-o StrictHostKeyChecking=no -i $CI_SSH_KEY"

# ----------- GLOBAL BEFORE_SCRIPT -----------
before_script:
  - chmod +x ci/setup-mvn-proxy.sh
  - ci/setup-mvn-proxy.sh
  - chmod 400 $CI_SSH_KEY
  - apk add --no-cache openssh-client rsync

# ----------- BUILD JOBS -----------

build_api_users:
  stage: build
  only:
    - main
  script:
    - cd users
    - mvn clean package
  artifacts:
    paths:
      - users/target/users.war

build_deploy_client:
  stage: build
  only:
    - main
  image: node:23-slim
  before_script:
    - apt-get update && apt-get install -y openssh-client rsync
    - chmod 400 $CI_SSH_KEY
  script:
    - cd client
    - echo "$ENV_PRODUCTION_CLIENT" > .env.production
    - npm ci
    - npm run build
    - scp -r $SSH_OPTIONS dist/* $DEPLOY_USER@$DEPLOY_HOST:/usr/share/nginx/html/client

# ----------- DEPLOY JOBS -----------

deploy_api_users:
  stage: deploy
  only:
    - main
  script:
    - scp $SSH_OPTIONS users/target/users.war $DEPLOY_USER@$DEPLOY_HOST:$API_DEPLOY_PATH

# On stop le deploiement de cette API pour les performances
# deploy_test_express:
#   stage: deploy
#   only:
#     - main
#   script:
#     - scp -r $SSH_OPTIONS express/* $DEPLOY_USER@$DEPLOY_HOST:/opt/express
#     - ssh $SSH_OPTIONS $DEPLOY_USER@$DEPLOY_HOST "
#       cd /opt/express &&
#       rm -rf node_modules &&
#       npm ci &&
#       pm2 restart server.js --name express-server
#       "

deploy_api_game:
  stage: deploy
  only:
    - main
  before_script:
    - apk add --no-cache openssh-client rsync
    - chmod 400 $CI_SSH_KEY
  script:
    - scp -r $SSH_OPTIONS api/* $DEPLOY_USER@$DEPLOY_HOST:/opt/api
    - ssh $SSH_OPTIONS $DEPLOY_USER@$DEPLOY_HOST "
      cd /opt/api &&
      rm -rf node_modules &&
      npm ci &&
      pm2 start ecosystem.config.cjs --env production
      "

deploy_admin:
  stage: deploy
  only:
    - main
  image: node:23-slim
  before_script:
    - apt-get update && apt-get install -y openssh-client rsync
    - chmod 400 $CI_SSH_KEY
  script:
    - cd admin
    - echo \"$ENV_PRODUCTION_ADMIN\" > .env.production
    - npm ci
    - npm run build
    - scp -r $SSH_OPTIONS dist/* $DEPLOY_USER@$DEPLOY_HOST:/usr/share/nginx/html/secret/

deploy_front:
  stage: deploy
  only:
    - main
  script:
    - scp -r $SSH_OPTIONS client/index.html $DEPLOY_USER@$DEPLOY_HOST:/usr/share/nginx/html
